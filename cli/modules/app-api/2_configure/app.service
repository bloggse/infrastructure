[Unit]
Description=Nodejs: [% app.name %]
After=network-online.target

[Service]
Restart=on-failure
WorkingDirectory=/var/www/[% app.work_dir %]

ExecStart=/usr/bin/node /var/www/[% app.exec_path %]
ExecStartPost=/usr/local/bin/register_app.sh register-app-instance --type=[% app.type %] --name=[% app.name %] --value="{ \"node\": \"[% node.name %]\", \"ip\": \"[% node.name %]\", \"port\": [% app.expose %]0 }"
ExecStop=/usr/local/bin/register_app.sh unregister-app-instance --type=[% app.type %] --name=[% app.name %]
EnvironmentFile=/etc/cluster/services.env
Environment="NODE_ENV=production"
Environment="EXPOSE=[% app.expose %]0"
Environment="INSTAGRAM_CLIENT_ID=[% instagram.client_id %]"
Environment="INSTAGRAM_CLIENT_SECRET=[% instagram.client_secret %]"
Environment="INSTAGRAM_CALLBACK_URI=[% instagram.callback_uri %]"
Environment="FRONTEND_BASE_URI=[% frontend_base_uri %]"
# Creating a user in DB:
# mongo --port 27017
# use influencer
# db.createUser({ user: "testuser", pwd: "testuser", roles: [ "readWrite", "dbAdmin" ] })
Environment="MONGODB_AUTH_DB=[% mongodb.auth_db %]"
Environment="MONGODB_USER=[% mongodb.user %]"
Environment="MONGODB_PASSWORD=[% mongodb.pwd %]"
Environment="MONGODB_DB_NAME=[% mongodb.db_name %]"
Environment="IMAGE_UPLOAD_DIR=/var/www/uploads"
Environment="IMAGE_URI_BASE=[% frontend_base_uri %]/images"

[Install]
WantedBy=multi-user.target
