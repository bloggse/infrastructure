global
  log /dev/log  local0
  log /dev/log  local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  # An alternative list with additional directives can be obtained from
  #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

defaults
  log  global
  mode  tcp
  option  dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000

###resolvers dns
###     {{range $dns := split (getenv "DNS_SERVERS") "\n" }}
###     nameserver dns_{{$dns}} {{$dns}}
###     {{end}}
###     resolve_retries       3
###     timeout retry         1s
###     hold valid           10s

{{$node := json (getv "/node/[% node.name %]") -}}
{{range $type := $node.services -}}

## All apps of type: {{ $type }}
{{range $service := ls (printf "/%s" $type) -}}
{{if (printf "/%s/%s/meta_data" $type $service) | exists}}
  {{- $meta_data := json (getv (printf "/%s/%s/meta_data" $type $service))}}
# {{$type}}: {{$service}}
listen tcp-in-{{$type}}-{{$service}}
  bind {{$meta_data.env.HOST}}:{{$meta_data.env.PORT}}
  use_backend {{$service}}

  backend {{$service}}
    balance roundrobin
    {{range $instance_name := ls (printf "/%s/%s/instance" $type $service) -}}
      {{- $instance := json (getv (printf "/%s/%s/instance/%s" $type $service $instance_name))}}
    server {{$instance_name}} {{$instance.ip}}:{{$instance.port}} check
    {{- end}}
{{end -}}
{{end -}}
{{end -}}
